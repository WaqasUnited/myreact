{"version":3,"sources":["components/Todo.js","App.js","index.js"],"names":["Notices","props","notices","className","length","onClick","onUpdateNotices","map","val","ind","type","message","icon","faRemove","id","filteredNotices","filter","removeNotice","localStorage","getItem","setItem","JSON","stringify","Todo","localTodos","useState","parse","todos","setTodos","gTodos","setgTodos","useEffect","inputText","setInputText","setNotices","completedChecked","e","parseInt","target","getAttribute","filteredTodos","completed","value","onKeyPress","which","obj","title","onChange","placeholder","faPlus","gtTodos","filterTheTodos","checked","faTrash","deleteTodo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d67dbdff.chunk.js","sourcesContent":["import { useState , useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPlus, faRemove } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./todo.css\";\n\nfunction Notices(props) {\n  let notices = props.notices;\n  function removeNotice(id) {\n    let filteredNotices = notices.filter((val, ind) => {\n      return ind !== id;\n    });\n\n    props.onUpdateNotices(filteredNotices);\n  }\n  let clearNotices = () => {\n    props.onUpdateNotices([]);\n  };\n  return (\n    <>\n      <div className=\"extech_notices\">\n        {notices.length > 2 && (\n          <div>\n            <button onClick={clearNotices} className=\"clearNotices\">\n              Clear All\n            </button>\n          </div>\n        )}\n        {notices.map((val, ind) => {\n          return (\n            <div className={`extech_notice_${val.type}`} key={ind}>\n              <p>{val.message}</p>\n              <span>\n                <FontAwesomeIcon\n                  icon={faRemove}\n                  onClick={() => removeNotice(ind)}\n                />\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\n\nif (!localStorage.getItem(\"localTodos\"))\n  localStorage.setItem(\"localTodos\", JSON.stringify([]));\n\n\nfunction Todo(props) {\n  let localTodos = localStorage.getItem(\"localTodos\");\n  let [todos, setTodos] = useState(JSON.parse(localTodos));\n  let [gTodos, setgTodos] = useState(JSON.parse(localTodos));\n\n  useEffect(()=>{\n    localStorage.setItem(\"localTodos\", JSON.stringify(todos));\n  }, [todos])\n\n  let [inputText, setInputText] = useState(\"\");\n  const [notices, setNotices] = useState([]);\n\n  let trackInputKeyPress = (e) => {\n    if (13 === e.which) {\n      if (\"\" === inputText) {\n        let obj = {\n          message: \"Please enter some text\",\n          type: \"error\"\n        };\n        setNotices([...notices, obj]);\n        return;\n      }\n\n      let obj = { title: inputText, completed: false };\n      setTodos([...todos, obj]);\n      setgTodos([...todos, obj]);\n\n      setInputText(\"\");\n    }\n  };\n\n  let addTodo = () => {\n    if (\"\" === inputText) {\n      let obj = {\n        message: \"Please enter some text\",\n        type: \"error\"\n      };\n      setNotices([...notices, obj]);\n      return;\n    }\n\n    let obj = { title: inputText, completed: false };\n    setTodos([...todos, obj]);\n    setgTodos([...todos, obj]);\n\n    setInputText(\"\");\n  };\n  let setInputTextVal = (e) => {\n    setInputText(e.target.value);\n  };\n\n  let completedChecked = (e) => {\n    let id = parseInt(e.target.getAttribute(\"data-id\"), 10);\n    let filteredTodos = todos.filter((val, ind) => {\n      if (id === ind) {\n        val.completed = !val.completed;\n      }\n      return val;\n    });\n    setTodos(filteredTodos);\n    setgTodos(filteredTodos);\n  };\n  let deleteTodo = (id) => {\n    let filteredTodos = todos.filter((val, ind) => {\n      return id !== ind;\n    });\n\n    let obj = {\n      message: \"Your Todo has been deleted successfully\",\n      type: \"success\"\n    };\n    setNotices([...notices, obj]);\n    setTodos(filteredTodos);\n    setgTodos(filteredTodos);\n  };\n\n  let filterTheTodos = (val) => {\n    if (\"all\" === val) {\n      setgTodos(todos);\n    }\n    if (\"completed\" === val) {\n      let gtTodos = todos.filter((val) => val.completed === true);\n      setgTodos(gtTodos);\n    }\n    if (\"active\" === val) {\n      let gtTodos = todos.filter((val) => val.completed !== true);\n      setgTodos(gtTodos);\n    }\n  };\n\n\n  return (\n    <>\n      <div className=\"extech_todo_container\">\n        <Notices notices={notices} onUpdateNotices={setNotices} />\n        <div className=\"extech_todo_top_actions\">\n          <input\n            value={inputText}\n            onKeyPress={trackInputKeyPress}\n            onChange={setInputTextVal}\n            placeholder={\"What's your plan for today?\"}\n          />\n          <button onClick={addTodo} className=\"button\">\n            <FontAwesomeIcon icon={faPlus} />\n          </button>\n          <select onChange={(e) => filterTheTodos(e.target.value)}>\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"active\">Active Tasks</option>\n          </select>\n        </div>\n\n        <div className=\"extech_todo_list\">\n          {gTodos.length === 0 && \"No todos found\"}\n          {gTodos.length > 0 &&\n            gTodos.map((val, ind) => {\n              return (\n                <div key={ind} className=\"singleTodo\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={completedChecked}\n                    checked={val.completed}\n                    data-id={ind}\n                    className=\"checkbox\"\n                  />\n\n                  <span\n                    className={`todoTitle ${val.completed ? \"selected\" : \"\"}`}\n                  >\n                    {val.title}\n                  </span>\n\n                  <span>\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => deleteTodo(ind)}\n                    />\n                  </span>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Todo;\n","import React from 'react'\nimport Todo from './components/Todo'\nimport Shophere from './components/ShopHere'\nimport './index.css'\n\nfunction App(){\n\t// fetch('http://localhost:3000/api')\n\t// .then(res => res.json())\n //  \t.then(result=>console.log(result))\n  return(\n  \t\n    <div>\n      <Todo />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// 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"],"sourceRoot":""}